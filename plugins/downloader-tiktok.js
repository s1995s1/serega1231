import fetch from 'node-fetch'
let handler = async (m, { conn, text, usedPrefix, command }) => {
if (!text) throw `*[‚ùó–ò–ù–§–û–†–ú–ê–¶–ò–Ø‚ùó] –ü–†–ê–í–ò–õ–¨–ù–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ö–û–ú–ê–ù–î–´*\n\n*‚Äî‚óâ –ü–†–ò–ú–ï–†:*\n*${usedPrefix + command} https://vm.tiktok.com/ZML42vSnn/*`
if (!/(?:https:?\/{2})?(?:w{3}|vm|vt|t)?\.?tiktok.com\/([^\s&]+)/gi.test(text)) throw `*[‚ùóINFO‚ùó] ENLACE DE TIKTOK INCORRECTO, POR FAVOR INGRESE UN ENLACE/LINK DE ALG√öN V√çDEO DE TIKTOK*\n\n*‚Äî‚óâ EJEMPLO:*\n*${usedPrefix + command} https://vm.tiktok.com/ZML42vSnn/*`
let url = (await fetch(text)).url
let res = await (await fetch(`https://api2.musical.ly/aweme/v1/aweme/detail/?aweme_id=${url.split('?')[0].split('/')[5]}`)).json()
let data = res.aweme_detail.video.play_addr.url_list
if (!data.length) throw '*[‚ùó–ò–ù–§–û–†–ú–ê–¶–ò–Ø‚ùó] –ò–ó–í–ò–ù–ò–¢–ï, –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï –í–ê–®–ï–ì–û –í–ò–î–ï–û, –ü–û–ñ–ê–õ–£–ô–°–¢–ê, –ü–û–í–¢–û–†–ò–¢–ï –ü–û–ü–´–¢–ö–£*'
let meta = await getInfo(url).catch(_ => {})
await m.reply('*[‚ùó–ò–ù–§–û–†–ú–ê–¶–ò–Ø‚ùó] –ü–û–î–û–ñ–î–ò–¢–ï –ú–ò–ù–£–¢–ö–£, –ü–û–ö–ê –Ø –°–ö–ê–ß–ê–Æ*')
let buttons = [{ buttonText: { displayText: '–ê–£–î–ò–û–§–ê–ô–õ' }, buttonId: `${usedPrefix}tomp3` }]
conn.sendMessage(m.chat, { video: { url: data[data.length - 1] }, caption: '_üåé–•—É–ª–∏–≥–∞–Ωüåè_', footer: await shortUrl(data[data.length - 1]), buttons }, { quoted: m })}

handler.help = ['tiktok']
handler.tags = ['downloader']
handler.alias = ['—Ç–∏–∫—Ç–æ–∫', 'tikdl', 'tiktokdl', 'tiktoknowm']
handler.command = /^(tt|—Ç–∏–∫—Ç–æ–∫)(dl|nowm)?$/i
export default handler

async function getInfo(url) {
let id = url.split('?')[0].split('/')
let res = await (await fetch(`https://www.tiktok.com/node/share/video/${id[3]}/${id[5]}/`)).json()
return res?.seoProps?.metaParams}
async function shortUrl(url) {
return await (await fetch(`https://tinyurl.com/api-create.php?url=${url}`)).text()}
