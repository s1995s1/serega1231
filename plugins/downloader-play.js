import { youtubeSearch } from '@bochilteam/scraper'
let handler = async (m, { conn, command, text, usedPrefix }) => {
if (!text) throw `*[‚ùó–ò–ù–§–û–†–ú–ê–¶–ò–Ø‚ùó] –ù–ê–ó–í–ê–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ï–ô –ü–ï–°–ù–ò, –ü–û–ñ–ê–õ–£–ô–°–¢–ê, –í–í–ï–î–ò–¢–ï –ö–û–ú–ê–ù–î–£ –ü–õ–Æ–° –ù–ê–ó–í–ê–ù–ò–ï / –ù–ê–ó–í–ê–ù–ò–ï –ü–ï–°–ù–ò*\n\n*‚Äî‚óâ –ü–†–ò–ú–ï–†:*\n*${usedPrefix + command} Good Feeling - Flo Rida*`
let vid = (await youtubeSearch(text)).video[0]
if (!vid) throw '*[‚ùó–ò–ù–§–û–†–ú–ê–¶–ò–Ø‚ùó] –ò–ó–í–ò–ù–ò–¢–ï, –Ø –ù–ï –°–ú–û–ì –ù–ê–ô–¢–ò –ê–£–î–ò–û/–í–ò–î–ï–û, –ü–û–ü–†–û–ë–£–ô–¢–ï –î–†–£–ì–û–ï –ò–ú–Ø/–ó–ê–ì–û–õ–û–í–û–ö*'
try {
let { title, description, thumbnail, videoId, durationH, viewH, publishedTime } = vid
const url = 'https://www.youtube.com/watch?v=' + videoId
conn.sendHydrated(m.chat, `
üìå *–ù–ê–ó–í–ê–ù–ò–ï :* ${title}
üìá *–û–ü–ò–°–ê–ù–ò–ï:* ${description}
üìÜ *–í–´–õ–û–ñ–ï–ù–û:* ${publishedTime}
‚åö *–ü–†–û–î–û–õ–ñ–ò–¢–ï–õ–¨–ù–û–°–¢–¨:* ${durationH}
üëÄ *–ü–†–û–°–ú–û–¢–†–ï–ù–û:* ${viewH}
`.trim(), author, thumbnail, `${url}`, '–°–°–´–õ–ö–ê', null, null, [
['–ü–ï–°–ù–Ø', `${usedPrefix}yta ${url}`],
['–ö–õ–ò–ü', `${usedPrefix}ytv ${url}`],
['–í–°–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê', `${usedPrefix}playlist ${text}`]  
], m)
}catch(e){
m.reply('*[‚ùó–ò–ù–§–û–†–ú–ê–¶–ò–Ø‚ùó] –û–®–ò–ë–ö–ê, –ü–û–ñ–ê–õ–£–ô–°–¢–ê, –ü–û–ü–†–û–ë–£–ô–¢–ï –ï–©–ï –†–ê–ó*')
console.log(e)
}}
handler.help = ['play', 'play2'].map(v => v + ' <pencarian>')
handler.tags = ['downloader']
handler.command = /^–ø–µ—Å–Ω—è?$/i
export default handler
