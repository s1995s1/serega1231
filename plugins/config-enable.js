let handler = async (m, { conn, usedPrefix, command, args, isOwner, isAdmin, isROwner }) => {
const sections = [
{
title: `*–°–ü–ò–°–û–ö –§–£–ù–ö–¶–ò–ô*`,
rows: [
{title: "‚ú® | –ü–†–ò–í–ï–¢–°–¢–í–ò–ï", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø –í –ì–†–£–ü–ü–ï", rowId: `${usedPrefix + command} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ`},
{title: "üåé | –î–õ–Ø –ì–†–£–ü–ü–´", description: "–ë–û–¢ –°–¢–ê–ù–û–í–ò–¢–°–Ø –û–ë–©–ï–î–û–°–¢–£–ü–ù–´–ú –ò/–ò–õ–ò –ß–ê–°–¢–ù–´–ú", rowId: `${usedPrefix + command} –¥–ª—è–≥—Ä—É–ø–ø—ã`},
{title: "ü•µ | 18+", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –ö–û–ú–ê–ù–î +18", rowId: `${usedPrefix + command} 18+`},
{title: "üîó | –ê–ù–¢–ò–°–°–´–õ–ö–ê", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –ë–ê–ù–ê –ó–ê –°–°–´–õ–ö–ò –ù–ê –ì–†–£–ü–ü–´ –í–ê–¢–°–ê–ü", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞`},   
{title: "üîó | –ê–ù–¢–ò–°–°–´–õ–ö–ê 2", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –ë–ê–ù–ê –ó–ê –õ–Æ–ë–´–ï –ò–ù–¢–ï–†–ù–ï–¢ –°–°–´–õ–ö–ò", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2`},    
{title: "üîé | –û–ë–ù–ê–†–£–ñ–ï–ù–ò–ï", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø –õ–Æ–ë–´–• –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ì–†–£–ü–ü–ï", rowId: `${usedPrefix + command} –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ`},      
{title: "‚ùó | –ê–î–ú–ò–ù", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –§–£–ù–ö–¶–ò–ô –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê –£ –ë–û–¢–ê", rowId: `${usedPrefix + command} –±–æ—Ç–∞–¥–º–∏–Ω`},    
{title: "‚òëÔ∏è | AUTOREAD", description: "MARCA AUTOMATICAMENTE LAS CONVERSACIONES COMO LEIDO", rowId: `${usedPrefix + command} autoread`},
{title: "üîä | –ì–û–õ–û–°–û–í–´–ï", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –ì–û–õ–û–°–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô –£ –ë–û–¢–ê", rowId: `${usedPrefix + command} –≥–æ–ª–æ—Å–æ–≤—ã–µ`},
{title: "üëæ | –ê–í–¢–û–°–¢–ò–ö–ï–†", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –§–£–ù–ö–¶–ò–ò –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –°–û–ó–î–ê–ù–ò–Ø –°–¢–ò–ö–ï–†–û–í –ò–ó –ú–ï–î–ò–ê–§–ê–ô–õ–û–í", rowId: `${usedPrefix + command} –∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä`},
{title: "üí¨ | PCONLY", description: "EL BOT SOLO RESPONDERA A LOS COMANDOS SI ES UN CHAT PRIVADO", rowId: `${usedPrefix + command} pconly`},
{title: "üè¢ | GCONLY", description: "EL BOT SOLO RESPONDERA A LOS COMANDOS SI ES UN GRUPO", rowId: `${usedPrefix + command} gconly`},
{title: "‚ùå | –ê–ù–¢–ò–†–ê–ó", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –§–£–ù–ö–¶–ò–ò –ê–ù–¢–ò –û–î–ù–û–†–ê–ó–û–í–û–ì–û –ü–†–û–°–ú–û–¢–†–ê", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Ä–∞–∑`},
{title: "üìµ | –ê–ù–¢–ò–ó–í–û–ù–û–ö", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –§–£–ù–ö–¶–ò–Æ –ó–ê–ü–†–ï–¢–ê –ó–í–û–ù–ö–û–í", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫`},
{title: "üí¨ | –ê–ù–¢–ò–õ–ò–ß–ö–ê", description: "–ó–ê–ü–†–ï–¢ –°–û–û–ë–©–ï–ù–ò–ô –í –õ–ò–ß–ö–£ –ë–û–¢–£", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–ª–∏—á–∫–∞`},
{title: "ü§¨ | –ê–ù–¢–ò–ú–ê–¢", description: "–§–£–ù–ö–¶–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –ó–ê –ú–ê–¢ –ò–ó –ì–†–£–ü–ü–´", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–º–∞—Ç`},
{title: "üï∏Ô∏è | –ê–ù–¢–ò–ë–õ–û–ö", description: "–í–ö–õ–Æ–ß–ï–ù–ò–ï –ò–õ–ò –í–´–ö–õ–Æ–ß–ï–ù–ò–ï –ó–ê–©–ò–¢–´ –û–¢ –î–í–û–ò–ß–ù–´–• –§–ê–ô–õ–û–í –ò–õ–ò –ü–û–ú–ï–•", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–±–ª–æ–∫`},
{title: "ü•∏ | –ü–û–ú–û–©–ù–ò–ö", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –í–´–ö–õ–Æ–ß–ò–¢–¨ –ú–ê–°–¢–ï–† –ì–†–£–ü–ü ü•∏", rowId: `${usedPrefix + command} –ø–æ–º–æ—à–Ω–∏–∫`},
{title: "üé≠ | ASISTENTE GRUPOSROL", description: "ACTIVA O DESACTIVA EL ASISTENTE DE GRUPOS DE ROL", rowId: `${usedPrefix + command} gruposrol`},
]}, ]
//let name = await conn.getName(m.sender)
const listMessage = {
text: ' ',
footer: `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–¥–ª—è–≥—Ä—É–ø–ø—ã*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–¥–ª—è–≥—Ä—É–ø–ø—ã*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *18+*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *18+*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–±–æ—Ç–∞–¥–º–∏–Ω*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–±–æ—Ç–∞–¥–º–∏–Ω*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *pconly*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *pconly*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *gconly*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *gconly*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *autoread*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *autoread*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–≥–æ–ª–æ—Å–æ–≤—ã–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–≥–æ–ª–æ—Å–æ–≤—ã–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Ä–∞–∑*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Ä–∞–∑*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–ª–∏—á–∫–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–ª–∏—á–∫–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–º–∞—Ç*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–º–∞—Ç*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–∞—Ä–∞–±*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–∞—Ä–∞–±*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–±–ª–æ–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–±–ª–æ–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–ø–æ–º–æ—à–Ω–∏–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–ø–æ–º–æ—à–Ω–∏–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *gruposrol*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *gruposrol*_
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ`,
title: null,
buttonText: "*–í–´–ë–†–ê–¢–¨ –ö–û–ú–ê–ù–î–£*",
sections }

let isEnable = /true|–≤–∫–ª—é—á–∏—Ç—å|(turn)?on|1/i.test(command)
let chat = global.db.data.chats[m.chat]
let user = global.db.data.users[m.sender]
let bot = global.db.data.settings[conn.user.jid] || {}
let type = (args[0] || '').toLowerCase()
let isAll = false, isUser = false
switch (type) {
case '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!isAdmin) {
global.dfail('admin', m, conn)
throw false
}
chat.welcome = isEnable
break
case '–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!isAdmin) {
global.dfail('admin', m, conn)
throw false
}
chat.detect = isEnable
break
case '—Å–Ω–µ—Å—Ç–∏':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.delete = isEnable
break
case '–∞–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.delete = !isEnable
break
case '–≤–≥—Ä—É–ø–ø–µ':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['self'] = !isEnable
break
case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink = isEnable
break
case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink2 = isEnable 
break
case '–∞–Ω—Ç–∏—Ä–∞–∑':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiviewonce = isEnable 
break
case '18+':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.modohorny = isEnable          
break
case '–∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.autosticker = isEnable          
break
case '–≥–æ–ª–æ—Å–æ–≤—ã–µ':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.audios = isEnable          
break
case '–±–æ—Ç–∞–¥–º–∏–Ω':
isAll = true
if (!isOwner) {
global.dfail('owner', m, conn)
throw false
}
bot.restrict = isEnable
break
case 'nyimak':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['nyimak'] = isEnable
break
case 'autoread':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['autoread'] = isEnable
break
case 'pconly':
case 'privateonly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['pconly'] = isEnable
break
case 'gconly':
case 'grouponly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['gconly'] = isEnable
break
case 'swonly':
case 'statusonly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['swonly'] = isEnable
break
case '–∞–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antiCall = isEnable
break
case '–∞–Ω—Ç–∏–ª–∏—á–∫–∞':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antiPrivate = isEnable
break
case '–∞–Ω—Ç–∏–º–∞—Ç':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiToxic = isEnable
break
case '–∞–Ω—Ç–∏–±–ª–æ–∫':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiTraba = isEnable
break
case '–ø–æ–º–æ—à–Ω–∏–∫':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.asistente = isEnable
break
case 'gruposrol':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.gruposrol = isEnable
break
case '–∞–Ω—Ç–∏–∞—Ä–∞–±':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiArab = isEnable  
break
default:
if (!/[01]/.test(command)) return await conn.sendMessage(m.chat, listMessage)
throw false
}
conn.sendButton(m.chat, `üóÇÔ∏è –§–£–ù–ö–¶–ò–Ø: ${type} 
üéöÔ∏è –°–¢–ê–¢–£–°: ${isEnable ? '–í–ö–õ–Æ–ß–ï–ù–ê' : '–í–´–ö–õ–Æ–ß–ï–ù–ê'}
üì£ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: ${isAll ? '–î–õ–Ø –ë–û–¢–ê' : isUser ? '' : '–î–õ–Ø –ì–†–£–ü–ü–´'}`, author, null, [[`${isEnable ? '‚úñÔ∏è –í–´–ö–õ–Æ–ß–ò–¢–¨ ‚úñÔ∏è' : '‚úîÔ∏è –í–ö–õ–Æ–ß–ò–¢–¨ ‚úîÔ∏è'}`, `${isEnable ? `#disable ${type}` : `#enable ${type}`}`], ['üëæ –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ üëæ', '#–º–µ–Ω—é']], m)}
handler.help = ['–≤–∫–ª', '–≤—ã–∫–ª'].map(v => v + '—é—á–∏—Ç—å <option>')
handler.tags = ['group', 'owner']
handler.command = /^((–≤–∫–ª|–≤—ã–∫–ª)—é—á–∏—Ç—å|(tru|fals)e|(turn)?[01])$/i
export default handler
